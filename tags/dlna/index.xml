<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dlna on James Moriarty</title><link>https://www.jamesmoriarty.xyz/tags/dlna/</link><description>Recent content in Dlna on James Moriarty</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 09 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.jamesmoriarty.xyz/tags/dlna/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker and DLNA</title><link>https://www.jamesmoriarty.xyz/post/docker-and-dlna/</link><pubDate>Sat, 09 Apr 2022 00:00:00 +0000</pubDate><guid>https://www.jamesmoriarty.xyz/post/docker-and-dlna/</guid><description>&lt;p&gt;I&amp;rsquo;ve recently discovered the Docker network &lt;a href="https://dockerlabs.collabnix.com/intermediate/macvlan.html"&gt;macvlan&lt;/a&gt; driver.&lt;/p&gt;
&lt;p&gt;A &lt;a href="https://dockerlabs.collabnix.com/intermediate/macvlan.html"&gt;macvlan&lt;/a&gt; driver creates virtual network interfaces, each with its own unique MAC address, that can be configured to communicate with other devices on a network. These virtual interfaces behave like separate physical network interfaces and can be assigned their own IP addresses and network settings.&lt;/p&gt;</description></item><item><title>Kubernetes and DLNA</title><link>https://www.jamesmoriarty.xyz/post/kubernetes-and-dlna/</link><pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate><guid>https://www.jamesmoriarty.xyz/post/kubernetes-and-dlna/</guid><description>&lt;p&gt;These are some notes taken while deploying a &lt;a href="https://en.wikipedia.org/wiki/Digital_Living_Network_Alliance"&gt;Digital Living Network Alliance&lt;/a&gt; (DLNA) to Kubernetes. DLNA is derived from &lt;a href="https://en.wikipedia.org/wiki/Universal_Plug_and_Play"&gt;Universal Plug and Play&lt;/a&gt; (UPnP) specifically for media interoperability. DLNA services are advertised and discovered via &lt;a href="https://en.wikipedia.org/wiki/Simple_Service_Discovery_Protocol"&gt;Simple Service Discovery Protocol &lt;/a&gt; (SSDP).&lt;/p&gt;</description></item></channel></rss>